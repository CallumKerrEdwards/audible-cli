name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v2
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            TARGET: linux
            CMD_BUILD: >
                pyinstaller --clean -F --hidden-import audible_cli -n audible -c pyi_entrypoint.py &&
                cd dist/ &&
                zip -r9 audible_linux_ubuntu_latest audible
            OUT_FILE_NAME: audible_linux_ubuntu_latest.zip
            ASSET_MIME: application/zip  # application/octet-stream
          - os: ubuntu-18.04
            TARGET: linux
            CMD_BUILD: >
                pyinstaller --clean -F --hidden-import audible_cli -n audible -c pyi_entrypoint.py &&
                cd dist/ &&
                zip -r9 audible_linux_ubuntu_18_04 audible
            OUT_FILE_NAME: audible_linux_ubuntu_18_04.zip
            ASSET_MIME: application/zip  # application/octet-stream
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                pyinstaller --clean -F --hidden-import audible_cli -n audible -c pyi_entrypoint.py &&
                cd dist/ &&
                zip -r9 audible_mac audible
            OUT_FILE_NAME: audible_mac.zip
            ASSET_MIME: application/zip
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                pyinstaller --clean -D --hidden-import audible_cli -n audible -c pyi_entrypoint.py &&
                cd dist/ &&
                zip -r9 audible_mac_dir audible
            OUT_FILE_NAME: audible_mac_dir.zip
            ASSET_MIME: application/zip 
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
                pyinstaller --clean -D --hidden-import audible_cli -n audible -c pyi_entrypoint.py &&
                cd dist/ &&
                powershell Compress-Archive audible audible_win_dir.zip
            OUT_FILE_NAME: audible_win_dir.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
                pyinstaller --clean -F --hidden-import audible_cli -n audible -c pyi_entrypoint.py &&
                cd dist/ &&
                powershell Compress-Archive audible.exe audible_win.zip
            OUT_FILE_NAME: audible_win.zip
            ASSET_MIME: application/zip
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip .[pyi] && pip list
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v2
      with:
        name: release_url
        path: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
